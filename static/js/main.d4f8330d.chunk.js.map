{"version":3,"sources":["Components/ProjectForm.js","Components/Form.js","Components/Tasks.js","Components/Home.js","Components/Navbar.js","App.js","index.js"],"names":["ProjectForm","addProject","className","name","autoComplete","onSubmit","e","preventDefault","target","project_name","value","key","uniqid","document","form1","reset","htmlFor","type","id","placeholder","required","Form","handleSubmit","closeForm","task","projects","projectToShow","defaultValue","description","duedate","defaultChecked","priority","map","project","onClick","Tasks","deleteTask","editTask","useState","showDescription","setShowDescription","showEditForm","setShowEditForm","in_project","completed","style","newTask","Home","addTask","isTaskForm","setIsTaskForm","Navbar","addedTasks","showProjects","setShowProjects","setProjectToShow","handleProjectClick","projectToShowName","textContent","useEffect","burger","querySelector","classList","toggle","addedTask","App","setAddedTasks","setProjects","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4f8330d.chunk.js","sourcesContent":["import React from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nconst ProjectForm = ({addProject}) => {\r\n\r\n\tconst handleProjectSubmit = (e) =>  {\r\n\t\te.preventDefault();\r\n\t\taddProject({name: e.target.project_name.value, key: uniqid()});\r\n\t\tdocument.form1.reset();\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className= \"project-form\">\r\n\t\t\t<form name=\"form1\" className=\"project-form-wrapper\" autoComplete=\"off\" onSubmit={handleProjectSubmit}>\r\n\t\t\t\t<label htmlFor = \"project_name\">New Project: </label>\r\n\t\t\t\t<input type=\"text\" name=\"project_name\" id=\"project_name\" placeholder=\"Name\" required />\r\n\t\r\n\t\t\t\t<div className=\"form-buttons\">\r\n\t\t\t\t\t<button className=\"add-task-btn\" type=\"submit\">Add</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default ProjectForm;","import React from 'react';\r\n\r\nconst Form = ({handleSubmit, closeForm, task, projects, projectToShow}) => {\r\n\t\r\n\treturn(\r\n\t<div>\r\n\t\t<form className=\"form-wrapper\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\t\t\t<label htmlFor = \"name\" className=\"input-query\">Task Name*: </label>\r\n\t\t\t<input type=\"text\" name=\"name\" id=\"name\" className=\"input-fields\" defaultValue={task.name}required />\r\n\t\t\t\r\n\t\t\t<label htmlFor=\"description\" className=\"input-query\">Description: </label>\r\n\t\t\t<input type=\"text\" name=\"description\" id=\"description\" className=\"input-fields\" defaultValue={task.description}/>\r\n\t\t\t\r\n\t\t\t<label htmlFor = \"duedate\" className=\"input-query\">Due Date: </label>\r\n\t\t\t<input type=\"date\"  name=\"duedate\" id=\"duedate\" className=\"input-fields\" defaultValue={task.duedate} />\r\n\t\t\t\r\n\t\t\t<div className=\"input-query\">Priority:<br />\r\n\t\t\t\t<input type=\"radio\" id=\"low\" name=\"priority\" value=\"low\" defaultChecked={task.priority === 'low'}/>\r\n\t\t\t\t<label htmlFor=\"low\">Low</label><br />\r\n\t\t\t\t<input type=\"radio\" id=\"high\" name=\"priority\" value=\"high\" defaultChecked={task.priority === 'high'}/>\r\n\t\t\t\t<label htmlFor=\"female\">High</label><br />\r\n\t\t\t\t<input type=\"radio\" id=\"neutral\" name=\"priority\" value=\"neutral\" defaultChecked={task.priority!=='low' && task.priority!=='high'} />\r\n\t\t\t\t<label htmlFor=\"neutral\">Neutral</label>\r\n\t\t\t</div>\r\n\r\n\t\t\t<label htmlFor = \"in_project\" className=\"input-query\">Project: </label>\r\n\t\t\t<select name = \"in_project\" id = \"in_project\" className=\"input-field-select\" defaultValue = {projectToShow}>\r\n\t\t\t\t{projects.map((project) => (\r\n\t\t\t\t\t<option value = {project.name} key={project.key}>{project.name} </option>\r\n\t\t\t\t))}\r\n\t\t\t</select>\r\n\r\n\t\t\t<div className=\"form-buttons\">\r\n\t\t\t\t<button className=\"add-task-btn\" type=\"submit\">{task.name? 'Save' : 'Add'}</button>\r\n\t\t\t\t<button className=\"close-form-btn\" type=\"button\" onClick = {closeForm}>Close</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n\t)\r\n}\r\nexport default Form;","import React, {useState} from 'react';\r\nimport Form from './Form';\r\nimport uniqid from 'uniqid';\r\n\r\nconst Tasks = ({task, deleteTask, editTask, projects, projectToShow}) => {\r\n\r\n\tconst [showDescription , setShowDescription] = useState(false);\r\n\tconst [showEditForm, setShowEditForm] = useState(false);\r\n\r\n\tconst openEditForm = () => {\r\n\t\tsetShowEditForm(true);\r\n\t}\r\n\r\n\tconst closeEditForm = () => {\r\n\t\tsetShowEditForm(false);\r\n\t}\r\n\r\n\tconst handleFormEdit = (e) =>{\r\n\t\te.preventDefault();\r\n\t\tconst newTask = {\r\n\t\t\tid: uniqid(),\r\n\t\t\tname : e.target.name.value,\r\n\t\t\tdescription : e.target.description.value,\r\n\t\t\tduedate : e.target.duedate.value,\r\n\t\t\tpriority : e.target.priority.value,\r\n\t\t\tcompleted: task.completed,\r\n\t\t\tin_project: e.target.in_project.value,\r\n\t\t}\r\n\t\tsetShowEditForm(false);\r\n\t\teditTask(task.id, newTask);\r\n\t}\r\n\r\n\tconst handleCheckTask = () => {\r\n\t\ttask.completed = task.completed === 'Completed' ? 'Not completed' : 'Completed';\t\r\n\t\teditTask(task.id, task);\r\n\t}\r\n\r\n\treturn(\r\n\t<>\r\n\t{(projectToShow === task.in_project) && \r\n\t <div className = {task.completed === 'Completed' ? 'tasks completed' : 'tasks'}>\r\n\t\t<div className = \"task-title\">\r\n\t\t\t<div className = \"priority-div\">\r\n\t\t\t\t<div className={task.priority}></div>\r\n\t\t\t\t<h2>{task.name}</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className = 'task-icons'>\r\n\t\t\t\t\r\n\t\t\t\t<input type=\"checkbox\" style = {{\"marginRight\": \"15px\", \"cursor\" : \"pointer\"}} onClick = {handleCheckTask} defaultChecked={task.completed==='Completed'}/>\r\n\t\t\t\t<span className=\"material-icons-outlined\" onClick = {() => deleteTask(task.id)}>delete</span>\r\n\t\t\t\t<span className=\"material-icons-outlined\" onClick = {openEditForm}>edit</span>\r\n\t\t\t\t{!showDescription &&\r\n\t\t\t\t\t<span className=\"material-icons-outlined\" onClick={() => setShowDescription(true)}>expand_more</span>\r\n\t\t\t\t}\r\n\t\t\t\t{showDescription &&\r\n\t\t\t\t\t<span className=\"material-icons-outlined\" onClick={() => setShowDescription(false)}>expand_less</span>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{showDescription &&\r\n\t\t\t<div className = \"task-desc\">\r\n\t\t\t\t<p><b>Description:</b> {task.description}</p>\r\n\t\t\t\t<p><b>Due-date:</b> {task.duedate}</p>\r\n\t\t\t\t<p><b>Priority:</b> {task.priority}</p>\r\n\t\t\t\t<p><b>{task.completed}</b></p>\r\n\t\t\t\t<p><b>Project: {task.in_project}</b></p>\r\n\t\t\t</div>\r\n\t\t}\r\n\t </div>\r\n    }\r\n\t{showEditForm && \r\n\t\t<Form \r\n\t\t\thandleSubmit = {handleFormEdit}\r\n\t\t\tcloseForm = {closeEditForm}\r\n\t\t\ttask = {task}\r\n\t\t\tprojects = {projects}\r\n\t\t\tprojectToShow = {projectToShow}\r\n\t\t/>\r\n\t}\t\t\t \t\r\n\t</>\r\n\t)\r\n};\r\n\r\nexport default Tasks;","import React, { useState } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport Form from './Form';\r\n\r\n\r\nconst Home = ({addTask, projects, projectToShow}) => {\r\n\r\n\tconst [isTaskForm, setIsTaskForm] = useState(false);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst task = {\r\n\t\t\tid: uniqid(),\r\n\t\t\tname : e.target.name.value,\r\n\t\t\tdescription : e.target.description.value,\r\n\t\t\tduedate : e.target.duedate.value,\r\n\t\t\tpriority : e.target.priority.value,\r\n\t\t\tcompleted: 'Not completed',\r\n\t\t\tin_project: e.target.in_project.value,\r\n\t\t}\r\n\t\tsetIsTaskForm(false);\r\n\t\taddTask(task);\r\n\t}\r\n\r\n\tconst closeForm = () => {\r\n\t\tsetIsTaskForm(false);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className = \"home\">\r\n\t\t\t<button className = \"new-task-btn\" onClick = {() => setIsTaskForm(true)}>Add New Task</button>\r\n\t\t\t{isTaskForm &&\r\n\t\t\t\t<Form \r\n\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\tcloseForm={closeForm}\r\n\t\t\t\t\ttask={{id: '', name: '', description:'', duedate:'', priority:''}}\r\n\t\t\t\t\tprojects = {projects}\r\n\t\t\t\t\tprojectToShow = {projectToShow}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport ProjectForm from './ProjectForm';\r\nimport Tasks from './Tasks';\r\nimport Home from './Home';\r\n\r\n\r\nconst Navbar = ({addProject, projects, addedTasks, deleteTask, editTask, addTask}) => {\r\n\r\n\tconst showNav = () =>{\r\n\t\tconst burger = document.querySelector('.burger');\r\n\t\tconst nav = document.querySelector('.nav-links');\r\n\t\tnav.classList.toggle('nav-active');\r\n\t\tburger.classList.toggle('toggle');\r\n\t}\r\n\r\n\tconst [showProjects, setShowProjects] = useState(true);\r\n\r\n\tconst [projectToShow, setProjectToShow] = useState('Default');\r\n\r\n\tconst handleProjectClick = (e) => {\r\n\t\tlet projectToShowName = e.target.textContent;\r\n\t\tsetProjectToShow(projectToShowName);\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetShowProjects(true);\r\n\t}, [projects])\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t<div className = \"top-nav\">\r\n\t\t\t<div className=\"burger toggle\" onClick={showNav}>\r\n\t\t\t\t<div className = \"line1\"></div>\r\n\t\t\t\t<div className = \"line2\"></div>\r\n\t\t\t\t<div className = \"line3\"></div>\r\n\t\t\t</div>\r\n\t\t\t<h1>TODO LIST</h1>\r\n\t\t\t<ul className = \"nav-links nav-active\">\t\t\t\t\r\n\t\t\t\t<li><ProjectForm addProject = {addProject}/></li>\r\n\t\t\t\t<div className = \"projects-show\">\r\n\t\t\t\t\t<li>Projects</li>\r\n\t\t\t\t\t{!showProjects &&\r\n\t\t\t\t\t\t<span className=\"material-icons-outlined\" onClick = {() => setShowProjects(true)}>expand_more</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{showProjects &&\r\n\t\t\t\t\t\t<span className=\"material-icons-outlined\" onClick = {() => setShowProjects(false)}>expand_less</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"projects\">\r\n\t\t\t\t\t{showProjects && projects.map((project) => (\r\n\t\t\t\t\t\t<li key = {project.key} onClick = {handleProjectClick}>{project.name}</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t\t\r\n\t\t<h2 className = \"project_to_show\">{projectToShow} </h2>\r\n\t\t{addedTasks.map((addedTask) => (\r\n\t\t\t<Tasks\r\n\t\t\t     key={addedTask.id} \r\n\t\t\t     task={addedTask} \r\n\t\t\t     deleteTask={deleteTask}\r\n\t\t\t     editTask ={editTask}\r\n\t\t\t     projects = {projects}\r\n\t\t\t     projectToShow = {projectToShow}\r\n\t\t\t/>\r\n\t\t))}\r\n\t\t <Home \r\n\t          addTask = {addTask} \r\n\t          projects = {projects}\r\n\t          projectToShow = {projectToShow}\r\n\t      />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport Navbar from './Components/Navbar';\r\n\r\nfunction App() {\r\n\r\n  const [addedTasks, setAddedTasks] = useState([]);\r\n\r\n  const [projects, setProjects] = useState([{name:\"Default\", key:\"default\"}]);\r\n\r\n  const addProject = (project) => setProjects([...projects, project]);\r\n  \r\n  const addTask = (task) => setAddedTasks([...addedTasks, task]);\r\n\r\n  const deleteTask = (id) => setAddedTasks(addedTasks.filter(addedTask => addedTask.id !== id));\r\n\r\n  const editTask = (id, newTask) => setAddedTasks(addedTasks.map(addedTask => (addedTask.id === id)? newTask : addedTask));\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar \r\n          addProject = {addProject}\r\n          projects = {projects}\r\n          addedTasks = {addedTasks}\r\n          deleteTask = {deleteTask}\r\n          editTask = {editTask}\r\n          addTask = {addTask}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}